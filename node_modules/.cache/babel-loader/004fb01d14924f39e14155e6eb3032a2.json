{"ast":null,"code":"import _slicedToArray from \"/Users/Thomas.Wang/Documents/\\u524D\\u7AEF/redux-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Thomas.Wang/Documents/\\u524D\\u7AEF/redux-app/src/pages/ReducerHook.js\";\nimport React, { useReducer } from 'react';\n\nconst reducer = function (state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      return {\n        count: state.count\n      };\n  }\n};\n\nfunction ReducerHook() {\n  const _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const count = state.count;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"increment\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, count), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"decrement\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"-\"));\n}\n\nexport default ReducerHook;","map":{"version":3,"sources":["/Users/Thomas.Wang/Documents/前端/redux-app/src/pages/ReducerHook.js"],"names":["React","useReducer","reducer","state","action","type","count","ReducerHook","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAACC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAtB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAACA,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAtB,OAAP;;AACF;AACE,aAAO;AAACA,QAAAA,KAAK,EAAEH,KAAK,CAACG;AAAd,OAAP;AANJ;AAQD,CATD;;AAWA,SAASC,WAAT,GAAuB;AAAA,sBACKN,UAAU,CAACC,OAAD,EAAU;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAV,CADf;AAAA;AAAA,QACdH,KADc;AAAA,QACPK,QADO;;AAAA,QAEdF,KAFc,GAELH,KAFK,CAEdG,KAFc;AAGrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,KAAP,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAOD;;AAED,eAAeE,WAAf","sourcesContent":["import React, {useReducer} from 'react'\n\nconst reducer = function (state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {count: state.count + 1};\n    case \"decrement\":\n      return {count: state.count - 1};\n    default:\n      return {count: state.count}\n  }\n};\n\nfunction ReducerHook() {\n  const [state, dispatch] = useReducer(reducer, {count: 0});\n  const {count} = state;\n  return (\n    <div>\n      <button onClick={() => dispatch({type: \"increment\"})}>+</button>\n      <span>{count}</span>\n      <button onClick={() => dispatch({type: \"decrement\"})}>-</button>\n    </div>\n  );\n}\n\nexport default ReducerHook;\n"]},"metadata":{},"sourceType":"module"}